// AUTOGENERATED CODE
//
// Do not make changes directly to this (.cs) file.
// Change "SET b,r +               .tt" instead.

using System;

namespace IngameScript
{
    partial class Program
    {
        public partial class Z80InstructionExecutor
        {
            /// <summary>
            /// The SET 0,A instruction
            /// </summary>
            byte SET_0_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 0, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,A instruction
            /// </summary>
            byte SET_1_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 1, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,A instruction
            /// </summary>
            byte SET_2_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 2, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,A instruction
            /// </summary>
            byte SET_3_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 3, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,A instruction
            /// </summary>
            byte SET_4_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 4, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,A instruction
            /// </summary>
            byte SET_5_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 5, 1);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,A instruction
            /// </summary>
            byte SET_6_A()
            {
                FetchFinished();
                RG.A = WithBit(RG.A, 6, 1);
                return 8;
            }

            /// <summary>
            /// The SET 7,A instruction
            /// </summary>
            byte SET_7_A()
            {
                FetchFinished();
                RG.A = WithBit(RG.A, 7, 1);
                return 8;
            }

            /// <summary>
            /// The RES 0,A instruction
            /// </summary>
            byte RES_0_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 0, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,A instruction
            /// </summary>
            byte RES_1_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 1, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,A instruction
            /// </summary>
            byte RES_2_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 2, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,A instruction
            /// </summary>
            byte RES_3_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 3, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,A instruction
            /// </summary>
            byte RES_4_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 4, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,A instruction
            /// </summary>
            byte RES_5_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 5, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,A instruction
            /// </summary>
            byte RES_6_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 6, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,A instruction
            /// </summary>
            byte RES_7_A()
            {
                FetchFinished();

                var oldValue = RG.A;
                var newValue = WithBit(oldValue, 7, 0);
                RG.A = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,B instruction
            /// </summary>
            byte SET_0_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 0, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,B instruction
            /// </summary>
            byte SET_1_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 1, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,B instruction
            /// </summary>
            byte SET_2_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 2, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,B instruction
            /// </summary>
            byte SET_3_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 3, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,B instruction
            /// </summary>
            byte SET_4_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 4, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,B instruction
            /// </summary>
            byte SET_5_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 5, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,B instruction
            /// </summary>
            byte SET_6_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 6, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,B instruction
            /// </summary>
            byte SET_7_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 7, 1);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,B instruction
            /// </summary>
            byte RES_0_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 0, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,B instruction
            /// </summary>
            byte RES_1_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 1, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,B instruction
            /// </summary>
            byte RES_2_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 2, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,B instruction
            /// </summary>
            byte RES_3_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 3, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,B instruction
            /// </summary>
            byte RES_4_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 4, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,B instruction
            /// </summary>
            byte RES_5_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 5, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,B instruction
            /// </summary>
            byte RES_6_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 6, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,B instruction
            /// </summary>
            byte RES_7_B()
            {
                FetchFinished();

                var oldValue = RG.B;
                var newValue = WithBit(oldValue, 7, 0);
                RG.B = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,C instruction
            /// </summary>
            byte SET_0_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 0, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,C instruction
            /// </summary>
            byte SET_1_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 1, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,C instruction
            /// </summary>
            byte SET_2_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 2, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,C instruction
            /// </summary>
            byte SET_3_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 3, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,C instruction
            /// </summary>
            byte SET_4_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 4, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,C instruction
            /// </summary>
            byte SET_5_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 5, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,C instruction
            /// </summary>
            byte SET_6_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 6, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,C instruction
            /// </summary>
            byte SET_7_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 7, 1);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,C instruction
            /// </summary>
            byte RES_0_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 0, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,C instruction
            /// </summary>
            byte RES_1_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 1, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,C instruction
            /// </summary>
            byte RES_2_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 2, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,C instruction
            /// </summary>
            byte RES_3_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 3, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,C instruction
            /// </summary>
            byte RES_4_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 4, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,C instruction
            /// </summary>
            byte RES_5_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 5, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,C instruction
            /// </summary>
            byte RES_6_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 6, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,C instruction
            /// </summary>
            byte RES_7_C()
            {
                FetchFinished();

                var oldValue = RG.C;
                var newValue = WithBit(oldValue, 7, 0);
                RG.C = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,D instruction
            /// </summary>
            byte SET_0_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 0, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,D instruction
            /// </summary>
            byte SET_1_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 1, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,D instruction
            /// </summary>
            byte SET_2_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 2, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,D instruction
            /// </summary>
            byte SET_3_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 3, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,D instruction
            /// </summary>
            byte SET_4_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 4, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,D instruction
            /// </summary>
            byte SET_5_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 5, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,D instruction
            /// </summary>
            byte SET_6_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 6, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,D instruction
            /// </summary>
            byte SET_7_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 7, 1);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,D instruction
            /// </summary>
            byte RES_0_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 0, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,D instruction
            /// </summary>
            byte RES_1_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 1, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,D instruction
            /// </summary>
            byte RES_2_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 2, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,D instruction
            /// </summary>
            byte RES_3_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 3, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,D instruction
            /// </summary>
            byte RES_4_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 4, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,D instruction
            /// </summary>
            byte RES_5_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 5, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,D instruction
            /// </summary>
            byte RES_6_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 6, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,D instruction
            /// </summary>
            byte RES_7_D()
            {
                FetchFinished();

                var oldValue = RG.D;
                var newValue = WithBit(oldValue, 7, 0);
                RG.D = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,E instruction
            /// </summary>
            byte SET_0_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 0, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,E instruction
            /// </summary>
            byte SET_1_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 1, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,E instruction
            /// </summary>
            byte SET_2_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 2, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,E instruction
            /// </summary>
            byte SET_3_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 3, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,E instruction
            /// </summary>
            byte SET_4_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 4, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,E instruction
            /// </summary>
            byte SET_5_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 5, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,E instruction
            /// </summary>
            byte SET_6_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 6, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,E instruction
            /// </summary>
            byte SET_7_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 7, 1);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,E instruction
            /// </summary>
            byte RES_0_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 0, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,E instruction
            /// </summary>
            byte RES_1_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 1, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,E instruction
            /// </summary>
            byte RES_2_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 2, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,E instruction
            /// </summary>
            byte RES_3_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 3, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,E instruction
            /// </summary>
            byte RES_4_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 4, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,E instruction
            /// </summary>
            byte RES_5_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 5, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,E instruction
            /// </summary>
            byte RES_6_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 6, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,E instruction
            /// </summary>
            byte RES_7_E()
            {
                FetchFinished();

                var oldValue = RG.E;
                var newValue = WithBit(oldValue, 7, 0);
                RG.E = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,H instruction
            /// </summary>
            byte SET_0_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 0, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,H instruction
            /// </summary>
            byte SET_1_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 1, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,H instruction
            /// </summary>
            byte SET_2_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 2, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,H instruction
            /// </summary>
            byte SET_3_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 3, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,H instruction
            /// </summary>
            byte SET_4_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 4, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,H instruction
            /// </summary>
            byte SET_5_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 5, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,H instruction
            /// </summary>
            byte SET_6_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 6, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,H instruction
            /// </summary>
            byte SET_7_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 7, 1);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,H instruction
            /// </summary>
            byte RES_0_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 0, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,H instruction
            /// </summary>
            byte RES_1_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 1, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,H instruction
            /// </summary>
            byte RES_2_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 2, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,H instruction
            /// </summary>
            byte RES_3_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 3, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,H instruction
            /// </summary>
            byte RES_4_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 4, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,H instruction
            /// </summary>
            byte RES_5_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 5, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,H instruction
            /// </summary>
            byte RES_6_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 6, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,H instruction
            /// </summary>
            byte RES_7_H()
            {
                FetchFinished();

                var oldValue = RG.H;
                var newValue = WithBit(oldValue, 7, 0);
                RG.H = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,L instruction
            /// </summary>
            byte SET_0_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 0, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 1,L instruction
            /// </summary>
            byte SET_1_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 1, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 2,L instruction
            /// </summary>
            byte SET_2_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 2, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 3,L instruction
            /// </summary>
            byte SET_3_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 3, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 4,L instruction
            /// </summary>
            byte SET_4_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 4, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 5,L instruction
            /// </summary>
            byte SET_5_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 5, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 6,L instruction
            /// </summary>
            byte SET_6_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 6, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 7,L instruction
            /// </summary>
            byte SET_7_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 7, 1);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 0,L instruction
            /// </summary>
            byte RES_0_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 0, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 1,L instruction
            /// </summary>
            byte RES_1_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 1, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 2,L instruction
            /// </summary>
            byte RES_2_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 2, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 3,L instruction
            /// </summary>
            byte RES_3_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 3, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 4,L instruction
            /// </summary>
            byte RES_4_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 4, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 5,L instruction
            /// </summary>
            byte RES_5_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 5, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 6,L instruction
            /// </summary>
            byte RES_6_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 6, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The RES 7,L instruction
            /// </summary>
            byte RES_7_L()
            {
                FetchFinished();

                var oldValue = RG.L;
                var newValue = WithBit(oldValue, 7, 0);
                RG.L = newValue;

                return 8;
            }

            /// <summary>
            /// The SET 0,(HL) instruction
            /// </summary>
            byte SET_0_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 1,(HL) instruction
            /// </summary>
            byte SET_1_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 2,(HL) instruction
            /// </summary>
            byte SET_2_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 3,(HL) instruction
            /// </summary>
            byte SET_3_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 4,(HL) instruction
            /// </summary>
            byte SET_4_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 5,(HL) instruction
            /// </summary>
            byte SET_5_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 6,(HL) instruction
            /// </summary>
            byte SET_6_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 7,(HL) instruction
            /// </summary>
            byte SET_7_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 0,(HL) instruction
            /// </summary>
            byte RES_0_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 1,(HL) instruction
            /// </summary>
            byte RES_1_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 2,(HL) instruction
            /// </summary>
            byte RES_2_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 3,(HL) instruction
            /// </summary>
            byte RES_3_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 4,(HL) instruction
            /// </summary>
            byte RES_4_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 5,(HL) instruction
            /// </summary>
            byte RES_5_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 6,(HL) instruction
            /// </summary>
            byte RES_6_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The RES 7,(HL) instruction
            /// </summary>
            byte RES_7_aHL()
            {
                FetchFinished();

                var address = (ushort)RG.HL;
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 15;
            }

            /// <summary>
            /// The SET 0,(IX+n),A instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),A instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),A instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),A instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),A instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),A instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),A instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),A instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),B instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),B instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),B instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),B instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),B instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),B instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),B instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),B instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),C instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),C instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),C instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),C instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),C instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),C instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),C instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),C instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),D instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),D instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),D instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),D instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),D instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),D instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),D instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),D instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),E instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),E instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),E instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),E instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),E instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),E instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),E instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),E instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),H instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),H instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),H instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),H instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),H instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),H instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),H instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),H instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n),L instruction
            /// </summary>
            byte SET_0_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n),L instruction
            /// </summary>
            byte SET_1_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n),L instruction
            /// </summary>
            byte SET_2_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n),L instruction
            /// </summary>
            byte SET_3_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n),L instruction
            /// </summary>
            byte SET_4_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n),L instruction
            /// </summary>
            byte SET_5_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n),L instruction
            /// </summary>
            byte SET_6_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n),L instruction
            /// </summary>
            byte SET_7_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IX+n) instruction
            /// </summary>
            byte SET_0_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 1,(IX+n) instruction
            /// </summary>
            byte SET_1_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 2,(IX+n) instruction
            /// </summary>
            byte SET_2_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 3,(IX+n) instruction
            /// </summary>
            byte SET_3_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 4,(IX+n) instruction
            /// </summary>
            byte SET_4_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 5,(IX+n) instruction
            /// </summary>
            byte SET_5_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 6,(IX+n) instruction
            /// </summary>
            byte SET_6_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 7,(IX+n) instruction
            /// </summary>
            byte SET_7_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),A instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),A instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),A instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),A instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),A instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),A instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),A instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),A instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),B instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),B instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),B instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),B instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),B instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),B instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),B instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),B instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),C instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),C instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),C instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),C instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),C instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),C instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),C instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),C instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),D instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),D instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),D instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),D instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),D instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),D instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),D instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),D instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),E instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),E instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),E instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),E instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),E instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),E instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),E instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),E instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),H instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),H instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),H instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),H instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),H instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),H instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),H instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),H instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n),L instruction
            /// </summary>
            byte RES_0_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n),L instruction
            /// </summary>
            byte RES_1_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n),L instruction
            /// </summary>
            byte RES_2_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n),L instruction
            /// </summary>
            byte RES_3_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n),L instruction
            /// </summary>
            byte RES_4_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n),L instruction
            /// </summary>
            byte RES_5_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n),L instruction
            /// </summary>
            byte RES_6_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n),L instruction
            /// </summary>
            byte RES_7_aIX_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IX+n) instruction
            /// </summary>
            byte RES_0_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 1,(IX+n) instruction
            /// </summary>
            byte RES_1_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 2,(IX+n) instruction
            /// </summary>
            byte RES_2_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 3,(IX+n) instruction
            /// </summary>
            byte RES_3_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 4,(IX+n) instruction
            /// </summary>
            byte RES_4_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 5,(IX+n) instruction
            /// </summary>
            byte RES_5_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 6,(IX+n) instruction
            /// </summary>
            byte RES_6_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 7,(IX+n) instruction
            /// </summary>
            byte RES_7_aIX_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IX + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),A instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),A instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),A instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),A instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),A instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),A instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),A instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),A instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),B instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),B instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),B instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),B instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),B instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),B instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),B instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),B instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),C instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),C instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),C instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),C instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),C instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),C instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),C instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),C instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),D instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),D instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),D instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),D instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),D instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),D instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),D instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),D instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),E instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),E instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),E instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),E instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),E instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),E instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),E instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),E instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),H instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),H instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),H instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),H instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),H instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),H instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),H instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),H instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n),L instruction
            /// </summary>
            byte SET_0_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n),L instruction
            /// </summary>
            byte SET_1_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n),L instruction
            /// </summary>
            byte SET_2_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n),L instruction
            /// </summary>
            byte SET_3_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n),L instruction
            /// </summary>
            byte SET_4_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n),L instruction
            /// </summary>
            byte SET_5_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n),L instruction
            /// </summary>
            byte SET_6_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n),L instruction
            /// </summary>
            byte SET_7_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The SET 0,(IY+n) instruction
            /// </summary>
            byte SET_0_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 1,(IY+n) instruction
            /// </summary>
            byte SET_1_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 2,(IY+n) instruction
            /// </summary>
            byte SET_2_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 3,(IY+n) instruction
            /// </summary>
            byte SET_3_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 4,(IY+n) instruction
            /// </summary>
            byte SET_4_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 5,(IY+n) instruction
            /// </summary>
            byte SET_5_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 6,(IY+n) instruction
            /// </summary>
            byte SET_6_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The SET 7,(IY+n) instruction
            /// </summary>
            byte SET_7_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 1);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),A instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),A instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),A instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),A instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),A instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),A instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),A instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),A instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_A(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.A = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),B instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),B instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),B instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),B instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),B instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),B instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),B instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),B instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_B(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.B = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),C instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),C instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),C instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),C instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),C instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),C instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),C instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),C instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_C(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.C = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),D instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),D instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),D instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),D instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),D instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),D instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),D instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),D instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_D(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.D = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),E instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),E instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),E instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),E instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),E instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),E instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),E instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),E instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_E(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.E = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),H instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),H instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),H instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),H instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),H instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),H instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),H instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),H instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_H(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.H = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n),L instruction
            /// </summary>
            byte RES_0_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n),L instruction
            /// </summary>
            byte RES_1_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n),L instruction
            /// </summary>
            byte RES_2_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n),L instruction
            /// </summary>
            byte RES_3_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n),L instruction
            /// </summary>
            byte RES_4_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n),L instruction
            /// </summary>
            byte RES_5_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n),L instruction
            /// </summary>
            byte RES_6_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n),L instruction
            /// </summary>
            byte RES_7_aIY_plus_n_and_load_L(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);
                RG.L = newValue;

                return 23;
            }

            /// <summary>
            /// The RES 0,(IY+n) instruction
            /// </summary>
            byte RES_0_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 0, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 1,(IY+n) instruction
            /// </summary>
            byte RES_1_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 1, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 2,(IY+n) instruction
            /// </summary>
            byte RES_2_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 2, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 3,(IY+n) instruction
            /// </summary>
            byte RES_3_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 3, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 4,(IY+n) instruction
            /// </summary>
            byte RES_4_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 4, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 5,(IY+n) instruction
            /// </summary>
            byte RES_5_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 5, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 6,(IY+n) instruction
            /// </summary>
            byte RES_6_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 6, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }

            /// <summary>
            /// The RES 7,(IY+n) instruction
            /// </summary>
            byte RES_7_aIY_plus_n(byte offset)
            {
                FetchFinished();

                var address = (ushort)(RG.IY + (SByte)offset);
                var oldValue = ProcessorAgent.ReadFromMemory(address);
                var newValue = WithBit(oldValue, 7, 0);
                ProcessorAgent.WriteToMemory(address, newValue);

                return 23;
            }
        }
    }
}